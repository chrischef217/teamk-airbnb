version: '3.8'

services:
  # 메인 애플리케이션
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=teamk_accommodation
      - DB_USER=teamk_user
      - DB_PASSWORD=teamk_secure_password_2024
      - JWT_SECRET=teamk-jwt-secret-key-change-this-in-production-2024
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    networks:
      - teamk-network

  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_secure_password_2024
      MYSQL_DATABASE: teamk_accommodation
      MYSQL_USER: teamk_user
      MYSQL_PASSWORD: teamk_secure_password_2024
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - teamk-network

  # Redis (세션/캐시용 - 선택사항)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - teamk-network

  # Nginx (리버스 프록시)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot_certs:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - teamk-network

  # SSL 인증서 자동 갱신
  certbot:
    image: certbot/certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local
  logs:
    driver: local
  certbot_certs:
    driver: local
  certbot_www:
    driver: local

networks:
  teamk-network:
    driver: bridge